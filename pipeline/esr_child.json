{
	"name": "esr_child",
	"properties": {
		"activities": [
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "test",
					"value": {
						"value": "@pipeline().parameters.NextSourceBinaryValue",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SQL Insert Binary Value",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ETL].[usp_SourceBinaryValueInsert]",
					"storedProcedureParameters": {
						"NextSourceBinaryValue": {
							"value": {
								"value": "@variables('test')",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"SourceSchema": {
							"value": {
								"value": "@variables('SourceSchema')",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceTable": {
							"value": {
								"value": "@variables('SourceTable')",
								"type": "Expression"
							},
							"type": "String"
						},
						"TargetSchema": {
							"value": {
								"value": "@variables('TargetSchema')",
								"type": "Expression"
							},
							"type": "String"
						},
						"TargetTable": {
							"value": {
								"value": "@variables('TargetTable')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_dwh_onprem",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SQL Get Binary Values",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SQL Insert Binary Value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@\"SELECT \n LastSourceBinaryValue,\n NextSourceBinaryValue\nFROM\nETL.AdminTrackAuditColumn \nWHERE DeleteFlag = 0\nAND\n    SourceSchema =\" + variables('SourceSchema')+\n\"AND\n    SourceTable=\"+variables('SourceTable')+\n\"AND\n   TargetSchema=\"+variables('TargetSchema') +\n\"AND\n  TargetTable=\"+variables('TargetTable') +\";\"",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dsServerReport_onprem",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "SQL Truncate Table DimExternalSystemStage",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SQL Get Binary Values",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_dwh_onprem",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "Truncate Table CoreETL.DimExternalSystemStage"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Copy DimExternalSystemStage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SQL Truncate Table DimExternalSystemStage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@\"SELECT\n       ess.ExternalSystemSnapshotKey\n      ,es.ExternalSystemKey\n      ,ess.StartUTCDateTime\n      ,ess.StartLocalDateTime\n      ,ess.EndUTCDateTime\n      ,ess.EndLocalDateTime\n      ,ess.ExternalSystemName\n      ,ess.ADTSystemFlag\n      ,ess.PharmacyInformationSystemFlag\n      ,ess.SubscriberFlag\n      ,ess.LegacyCIISafeFlag\n      ,ess.DataManagerFlag\n      ,ess.PISProvidesMedClassFlag\n      ,ess.PISProvidesTherapeuticClassFlag\n      ,ess.PISProvidesPureGenericNameFlag\n      ,ess.AllowPISItemEditFlag\n      ,ess.IgnorePISItemDeleteFlag\n      ,ess.IgnorePISItemUpdateFlag\n      ,ess.ProvidesAllergiesFlag\n      ,ess.ReplaceAllergiesFlag\n      ,ess.ProvidesPatientPhysicalObservationsFlag\n      ,ess.InboundDelayDurationAmount\n      ,ess.InboundDownDurationAmount\n      ,ess.ActiveConnectionFlag\n      ,ess.AllowTransferDischargeOfExternalEncounterFlag\n      ,ess.EditExternalScanCodeLinksFlag\n      ,ess.MessageLocalDateTimeZoneID\n      ,ess.MessageBehindCreatedFlag\n      ,ess.DiscontinuePharmacyOrderOnMergeFlag\n      ,ess.LeaveOfAbsenceActionabilityFlag\n      ,ess.AuthorizationSystemFlag\n      ,ess.DeleteFlag\n      ,COALESCE(ess.FirstSnapshotFlag, 0) AS FirstSnapshotFlag\n\t  ,COALESCE(ess.LastModifiedActorKey, '00000000-0000-0000-0000-000000000000') AS LastModifiedActorKey\n      ,ess.LastModifiedUTCDateTime\n      ,ess.LastModifiedBinaryValue\n  FROM \n       Core.ExternalSystemSnapshot ess\n  INNER JOIN\n       Core.ExternalSystem es\n  ON\n       ess.ExternalSystemKey = es.ExternalSystemKey\n  WHERE \n\t   CAST(ess.LastModifiedBinaryValue AS bigint) >\"+ activity('SQL Get Binary Values').output.firstRow.LastSourceBinaryValue +\" \n  AND \n  \t   CAST(ess.LastModifiedBinaryValue AS bigint) <=\" +activity('SQL Get Binary Values').output.firstRow.NextSourceBinaryValue + \";\"",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"isolationLevel": "ReadCommitted",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "dsoltp_onprem",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_dl_esrweb_vault",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"NextSourceBinaryValue": {
				"type": "int"
			}
		},
		"variables": {
			"test": {
				"type": "Integer"
			},
			"SourceSchema": {
				"type": "String",
				"defaultValue": "Core"
			},
			"SourceTable": {
				"type": "String",
				"defaultValue": "ExternalSystem"
			},
			"TargetSchema": {
				"type": "String",
				"defaultValue": "Core"
			},
			"TargetTable": {
				"type": "String",
				"defaultValue": "DimExternalSystem"
			},
			"LastSourceBinaryValue": {
				"type": "Integer"
			},
			"NextSourceBinaryValue": {
				"type": "Integer"
			}
		},
		"annotations": []
	}
}