{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "patientdata",
						"type": "DatasetReference"
					},
					"name": "patient"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ptName as string,",
				"          ptID as string,",
				"          ptAltID1 as string,",
				"          ptAltID2 as string,",
				"          ptType as boolean,",
				"          admitDate as integer,",
				"          admitDr as string,",
				"          attendDr as string,",
				"          dob as string,",
				"          sex as string,",
				"          estimate as boolean,",
				"          height as string,",
				"          hMeasure as boolean,",
				"          weight as string,",
				"          wMeasure as boolean,",
				"          facility as string,",
				"          room as string,",
				"          bed as string,",
				"          com1 as string,",
				"          com2 as string,",
				"          autoDisc as integer,",
				"          lastAccess as integer,",
				"          entered as boolean,",
				"          visitUnit as string,",
				"          visitExp as boolean,",
				"          diagnosis as string,",
				"          drg as string,",
				"          allergies as string,",
				"          dischargeTime as integer,",
				"          creatorDevice as string,",
				"          proced as string,",
				"          srv as string,",
				"          maint as boolean,",
				"          nUnit as string,",
				"          rowStatus as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> patient",
				"patient derive(ptName = toBase64(ptName),",
				"          dob = fromBase64(dob)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}